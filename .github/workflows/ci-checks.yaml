name: CI Tasks
on: pull_request

jobs:
  test-lint-docs:
    name: Test, Lint and Docs
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
      - run: go mod tidy && go mod vendor
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.0
      - run: make go/test
      - run: make go/lint
      - run: make docs
      - name: Get changed files in the docs folder
        id: changed-files-specific
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes"
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Notify if changeset is not empty
        if: steps.changed-files-specific.outputs.changes == 'true'
        uses: thollander/actions-comment-pull-request@v3
        with:
            message: |
                #### Documentation :book:
                #### Documentation is not up to date. Generate with `make docs` and check in changes!"
            comment-tag: "tf-docs"

      - name: Fail if documentation is not up to date
        if: steps.changed-files-specific.outputs.changes == 'true'
        run: echo "Documentation needs to be updated" && exit 1

      - name: Delete comment if it exists
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: "tf-docs"
          mode: delete

  run-smoketest:
    name: Run Smoketest
    runs-on: ubuntu-24.04
    services:
      opensearch:
        image: opensearchproject/opensearch:1.3.6
        ports:
          - 9200:9200
          - 9600:9600
        options: >-
          -e "discovery.type=single-node" 
          -e "plugins.security.disabled=true"
      opensearch_dashboards:
        image: opensearchproject/opensearch-dashboards:1.3.6
        ports:
          - 5601:5601
        env:
          OPENSEARCH_HOSTS: "[\"http://opensearch:9200\"]"
          DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
      - run: make smoke_test
